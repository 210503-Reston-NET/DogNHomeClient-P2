# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool: default

steps:

- task: NodeTool@0  
  inputs:  
    versionSpec: '12.x'  
  displayName: 'Install Node.js 12.x'  
- task: Npm@1  
  displayName: 'Install latest Angular CLI'  
  inputs:  
    command: custom  
    workingDir: ./
    verbose: false  
    customCommand: 'install @angular/cli@latest'  
- task: Npm@1  
  displayName: 'npm install'  
  inputs:  
    verbose: false  
  
- task: Npm@1  
  displayName: npm build 
  inputs:  
    command: custom  
    verbose: false  
    customCommand: 'run build --prod'  
#- task: CmdLine@2
  #displayName: "Run Angular tests"
  #inputs:
    #script: "ng test --browsers=ChromeHeadless --code-coverage --watch=false"

#- script: |
    #export CHROME_BIN=$(which google-chrome)
    #npx ng test --browsers ChromeHeadlessNoSandbox --watch=false --karmaConfig karma.conf.js --code-coverage 

- task: ArchiveFiles@2
  displayName: 'Archive files'
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
    includeRootFolder: false
    archiveType: zip
    archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
    replaceExistingArchive: true
    verbose: true

- task: AzureRmWebAppDeployment@4
  displayName: Connect App Services
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1(c9d4b655-c981-4696-93d6-bc06f9189051)'
    appType: 'webApp'
    WebAppName: 'DogNHomeClient'
    packageForLinux: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    #StartupCommand: 'pm2 serve /home/site/wwwroot/dist/DogNHomeClient --no-daemon --spa'
- task: AzureWebApp@1
  inputs:
        azureSubscription: 'Azure subscription 1(c9d4b655-c981-4696-93d6-bc06f9189051)'
        appType: 'webApp'
        appName: 'DogNHomeClient'
        deployToSlotOrASE: true
        resourceGroupName: 'Collection-P2'
        slotName: 'production'
        package: $(Build.ArtifactStagingDirectory)/**/*.zip
        deploymentMethod: 'auto'